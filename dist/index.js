"use strict";var xe=Object.create;var j=Object.defineProperty;var be=Object.getOwnPropertyDescriptor;var je=Object.getOwnPropertyNames;var _e=Object.getPrototypeOf,Ge=Object.prototype.hasOwnProperty;var ve=(e,t)=>{for(var r in t)j(e,r,{get:t[r],enumerable:!0})},F=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of je(t))!Ge.call(e,o)&&o!==r&&j(e,o,{get:()=>t[o],enumerable:!(n=be(t,o))||n.enumerable});return e};var w=(e,t,r)=>(r=e!=null?xe(_e(e)):{},F(t||!e||!e.__esModule?j(r,"default",{value:e,enumerable:!0}):r,e)),De=e=>F(j({},"__esModule",{value:!0}),e);var Ce={};ve(Ce,{app:()=>h});module.exports=De(Ce);var N=w(require("express")),Re=w(require("mongoose")),he=w(require("cors")),U=w(require("body-parser"));var fe=require("express");var _=require("mongoose"),Ie=new _.Schema({email:String,picture:String,name:String,id_google:String,creationDate:Date,updateDate:Date,locale:String,given_name:String,family_name:String,wage:Number}),f=(0,_.model)("Users",Ie);var O=w(require("jsonwebtoken"));function k(e){return O.default.sign(e,"admin",{expiresIn:"1d"})}var B=async(e,t)=>{try{let{id_google:r}=e.body;if(!await f.findOne({id_google:r}))return t.status(201).json({checkUser:!1});t.status(201).json({checkUser:!0})}catch{}},L=async(e,t,r)=>{try{let n=await f.find();return t.status(200).json(n)}catch(n){return t.status(500).json({error:n})}},A=async(e,t,r)=>{let{email:n,picture:o,name:a,id_google:i,locale:c,given_name:s,family_name:u}=e.body;try{if(await f.findOne({id_google:i}))throw"user already exists";return await f.create({email:n,picture:o,name:a,id_google:i,locale:c,given_name:s,family_name:u,creationDate:new Date,updateDate:new Date,wage:0}),t.status(201).json({message:"Person added!"})}catch(l){return t.status(500).json({error:l})}},P=async(e,t)=>{let{id_google:r}=e.body;try{let n=await f.findOne({id_google:r});if(!n)throw"email of user is not correct";let o=k({sub:n._id,id_google:n.id_google});return t.status(201).send({person:n,token:o})}catch(n){return t.status(500).json({error:n})}},W=async(e,t)=>{let{user_id:r,wage:n}=e.body;try{if(console.log(n,"wage"),console.log(r,"user_id "),!n)return t.status(500).json({error:"wage required"});if(!r)return t.status(500).json({error:"user required"});let o=await f.findOneAndUpdate({_id:r},{wage:n}),a=await f.findOne({_id:r});return t.status(201).send({people:a})}catch{return t.status(500).json({error:"err"})}};var H=w(require("jsonwebtoken"));var Se=async(e,t)=>{let r=String(e?.headers?.token||"");if(r)H.default.verify(r,"admin",async(n,o)=>{if(n)return t.status(403).json({message:n.message,error:n});if(!await f.findOne({_id:o?.sub}))return t.status(403).json({messagem:"forBidden"});e.headers.user=o?.sub});else return t.status(401).json({messagem:"Unauthorized"})},d=Se;function T(e){e.get("/user/getall",L),e.post("/user/check",B),e.post("/user/register",A),e.post("/user/login",P),e.post("/user/save/wage",W),e.post("/token",d)}var G=require("mongoose"),qe=new G.Schema({description:String,value:Number,date:Date,paymentConditions:String,paidGain:Boolean,category:String,observation:String,qtdInstallments:Number,valueRecurrence:Number,id_user:String}),m=(0,G.model)("Gain",qe);var z=async(e,t)=>{let{id:r,data:n}=e.body;try{d(e,t);let o=await m.findByIdAndUpdate(r,n),a=await m.findById(r);return t.status(201).json(a)}catch(o){return t.status(500).json({error:o})}},Y=async(e,t)=>{let{id:r}=e.body;try{d(e,t);let n=await m.findById(r);if(!n?._id)return t.status(500).json({error:"Ganho n\xE3o encontrado"});let o=await m.deleteOne({_id:r}),a=await m.find({id_user:n?.id_user});return t.status(201).json(a)}catch(n){return t.status(500).json({error:n})}},J=async(e,t)=>{let{id_user:r}=e.body;try{d(e,t);let n=await m.find({id_user:r});return t.status(201).json(n)}catch(n){return t.status(500).json({error:n})}},K=async(e,t)=>{try{d(e,t);let{id:r}=e.body,n=await m.findOne({_id:r});return t.status(201).json(n)}catch(r){return t.status(500).json({error:r})}},Q=async(e,t,r)=>{d(e,t);let{description:n,value:o,date:a,paymentConditions:i,paidGain:c,category:s,observation:u,id_user:l,valueRecurrence:y,qtdInstallments:g}=e.body;if(!n||!o||!a||!i||!l)return t.status(500).json({error:"H\xE1 obrigatorios campos n\xE3o preenchidos"});s||(s="no information"),u||(u=""),u||(u=""),c||(c=!1),y||(y=0),g||(g=0);try{return await m.create({description:n,value:o,date:a,paymentConditions:i,paidGain:c,id_user:l,valueRecurrence:y,qtdInstallments:g}),t.status(201).json({message:"Ganho criado com sucesso!"})}catch(x){return t.status(500).json({error:x})}};function V(e){e.get("/gain/all",J),e.post("/gain/get",K),e.put("/gain/update",z),e.delete("/gain/delete",Y),e.post("/gain/create",Q)}var v=require("mongoose"),Me=new v.Schema({description:String,value:Number,date:Date,paymentConditions:String,expensePayment:Boolean,category:String,local:String,qtdInstallments:Number,buyer:String,observation:String,id_goal:String,id_user:String,valueRecurrence:Number}),p=(0,v.model)("Expense",Me);var X=async(e,t)=>{let{id:r,data:n}=e.body;try{d(e,t);let o=await p.findByIdAndUpdate(r,n),a=await p.findById(r);return t.status(201).json(a)}catch(o){return t.status(500).json({error:o})}},Z=async(e,t)=>{let{id:r}=e.body;try{d(e,t);let n=await p.findById(r);if(!n?._id)return t.status(500).json({error:"Gasto n\xE3o encontrado"});let o=await p.deleteOne({_id:r}),a=await p.find({id_user:n?.id_user});return t.status(201).json(a)}catch(n){return t.status(500).json({error:n})}},$=async(e,t)=>{let{id_user:r}=e.body;try{d(e,t);let n=await p.find({id_user:r});return t.status(201).json(n)}catch(n){return t.status(500).json({error:n})}},ee=async(e,t)=>{try{d(e,t);let{id:r}=e.body,n=await p.findOne({_id:r});return t.status(201).json(n)}catch(r){return t.status(500).json({error:r})}},te=async(e,t,r)=>{d(e,t);let{description:n,value:o,date:a,paymentConditions:i,expensePayment:c,category:s,local:u,qtdInstallments:l,buyer:y,observation:g,id_goal:x,id_user:C,valueRecurrence:E}=e.body;if(!n||!o||!a||!i||!C||c===void 0)return t.status(500).json({error:"H\xE1 obrigatorios campos n\xE3o preenchidos"});E||(E=0),s||(s="no information"),g||(g=""),u||(g=""),x||(x=""),y||(y=""),l||(l=0);try{return await p.create({description:n,value:o,date:a,paymentConditions:i,expensePayment:c,category:s,local:u,qtdInstallments:l,buyer:y,observation:g,id_goal:x,id_user:C,valueRecurrence:E}),t.status(201).json({message:"Gasto cadastrado com sucesso!"})}catch(we){return t.status(500).json({error:we})}};function ne(e){e.post("/expense/all",$),e.get("/expense/get",ee),e.put("/expense/update",X),e.delete("/expense/delete",Z),e.post("/expense/create",te)}var re=async(e,t)=>{let{id_user:r,date:n}=e.body;try{d(e,t),console.log(r,"id_userid_user");let o=[];n||(n=new Date);let a=new Date(n);if(!r)return t.status(500).json({error:"user required"});let i=await m.find({id_user:r}),c=await p.find({id_user:r});return i.forEach((s,u)=>{if(s.paymentConditions==="Despesa recorrente"){o.push(s);return}if(new Date(s.date).getMonth()==a.getMonth()){o.push(s);return}if(s.paymentConditions==="Parcelado"&&s.qtdInstallments){let l=new Date(s.date);if(l.setMonth(l.getMonth()+s.qtdInstallments),new Date(s.date).getMonth()<=a.getMonth()&&l.getMonth()>=a.getMonth()){o.push(s);return}}}),c.forEach(s=>{if(s.paymentConditions==="Despesa recorrente"){o.push(s);return}if(new Date(s.date).getMonth()==a.getMonth()){o.push(s);return}if(s.paymentConditions==="Parcelado"&&s.qtdInstallments){let u=new Date(s.date);if(u.setMonth(u.getMonth()+s.qtdInstallments),new Date(s.date).getMonth()<=a.getMonth()&&u.getMonth()>=a.getMonth()){o.push(s);return}}}),t.status(201).json(o.sort((s,u)=>new Date(s.date).getMilliseconds()-new Date(u.date).getMilliseconds()))}catch(o){return t.status(500).json({error:o})}};function oe(e){e.post("/generalList/all",re)}var D=require("mongoose"),Ee=new D.Schema({title:String,value:String,id_user:String,color:String,icon:String}),I=(0,D.model)("Categories",Ee);var se=async(e,t)=>{let{title:r,color:n,icon:o,id_user:a}=e.body;try{if(!a)return t.status(500).json({error:"id user required"});if(!r)return t.status(500).json({error:"title required"});n=n||"",o=o||"",await I.create({id_user:a,title:r,color:n,icon:o});let i=await I.find({id_user:a});return t.status(201).json(i)}catch{return t.status(500).json({error:"err"})}},ae=async(e,t)=>{let{id_user:r}=e.body;try{let n=await I.find({id_user:r});return t.status(201).json(n)}catch(n){return t.status(500).json({error:n})}};function ie(e){e.post("/category/all",ae),e.post("/category/create",se)}var S=require("mongoose"),Ne=new S.Schema({name:String,valueFinal:Number,dateInitial:Date,dateFinal:Date,valueRaised:Number,valueInitial:Number,complete:Boolean,id_user:String}),b=(0,S.model)("Goal",Ne);var ue=async(e,t)=>{let{name:r,valueFinal:n,dateFinal:o,valueRaised:a,valueInitial:i,id_user:c}=e.body;try{if(Object.values([r,n,o,a,i,c]).some(g=>!g))return t.status(500).json({error:"there are empty fields"});let u=new Date,l=!1;await b.create({name:r,valueFinal:n,dateFinal:o,valueRaised:a,valueInitial:i,id_user:c,dateInitial:u,complete:l});let y=await b.find({id_user:c});return t.status(201).json(y)}catch{return t.status(500).json({error:"err"})}},ce=async(e,t)=>{let r=e.params.id;try{let n=await b.findById(r);return t.status(201).json(n)}catch(n){return t.status(500).json({error:n})}},de=async(e,t)=>{let{id_user:r}=e.body;try{let n=await b.find({id_user:r});return t.status(201).json(n)}catch(n){return t.status(500).json({error:n})}};function le(e){e.post("/goal/all",de),e.post("/goal/create",ue),e.get("/goal/:id",ce)}var q=require("mongoose"),Ue=new q.Schema({value:Number,date:Date,id_user:String,id_goal:String}),M=(0,q.model)("GoalRecurrence",Ue);var me=async(e,t)=>{let{value:r,date:n,id_goal:o,id_user:a}=e.body;try{if(Object.values([r,n,o,a]).some(s=>!s))return t.status(500).json({error:"there are empty fields"});await M.create({value:r,date:n,id_goal:o,id_user:a});let c=await M.find({id_goal:o});return t.status(201).json(c)}catch{return t.status(500).json({error:"err"})}},pe=async(e,t)=>{let{id_goal:r}=e.body;try{let n=await M.find({id_goal:r});return t.status(201).json(n)}catch(n){return t.status(500).json({error:n})}};function ge(e){e.post("/goal/recurrence/all",pe),e.post("/goal/recurrence/create",me)}var R=(0,fe.Router)();function ye(){return T(R),V(R),ne(R),oe(R),ie(R),le(R),ge(R),R}var h=(0,N.default)();h.use((0,he.default)());h.use(N.default.json());h.use(U.default.urlencoded({extended:!0}));h.use(U.default.json());h.use(ye());Re.default.connect("mongodb+srv://admin:12345@moon.p6ongcq.mongodb.net/?retryWrites=true&w=majority").then(()=>{console.log("mongoDB conection is working"),h.listen(9002)}).catch(e=>console.log(e,"deu erro :( (miado)"));0&&(module.exports={app});
