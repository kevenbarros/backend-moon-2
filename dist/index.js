"use strict";var we=Object.create;var j=Object.defineProperty;var be=Object.getOwnPropertyDescriptor;var _e=Object.getOwnPropertyNames;var je=Object.getPrototypeOf,Ge=Object.prototype.hasOwnProperty;var ve=(e,t)=>{for(var n in t)j(e,n,{get:t[n],enumerable:!0})},U=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of _e(t))!Ge.call(e,o)&&o!==n&&j(e,o,{get:()=>t[o],enumerable:!(r=be(t,o))||r.enumerable});return e};var h=(e,t,n)=>(n=e!=null?we(je(e)):{},U(t||!e||!e.__esModule?j(n,"default",{value:e,enumerable:!0}):n,e)),Ie=e=>U(j({},"__esModule",{value:!0}),e);var Fe={};ve(Fe,{app:()=>x});module.exports=Ie(Fe);var N=h(require("express")),Re=h(require("mongoose")),he=h(require("cors")),C=h(require("body-parser"));var fe=require("express");var G=require("mongoose"),De=new G.Schema({email:String,picture:String,name:String,id_google:String,creationDate:Date,updateDate:Date,locale:String,given_name:String,family_name:String,wage:Number}),f=(0,G.model)("Users",De);var O=h(require("jsonwebtoken"));function k(e){return O.default.sign(e,"admin",{expiresIn:"1d"})}var B=async(e,t)=>{try{let{id_google:n}=e.body;if(!await f.findOne({id_google:n}))return t.status(201).json({checkUser:!1});t.status(201).json({checkUser:!0})}catch{}},L=async(e,t,n)=>{try{let r=await f.find();return t.status(200).json(r)}catch(r){return t.status(500).json({error:r})}},A=async(e,t,n)=>{let{email:r,picture:o,name:a,id_google:i,locale:c,given_name:s,family_name:u}=e.body;try{if(await f.findOne({id_google:i}))throw"user already exists";return await f.create({email:r,picture:o,name:a,id_google:i,locale:c,given_name:s,family_name:u,creationDate:new Date,updateDate:new Date,wage:0}),t.status(201).json({message:"Person added!"})}catch(d){return t.status(500).json({error:d})}},P=async(e,t)=>{let{id_google:n}=e.body;try{let r=await f.findOne({id_google:n});if(!r)throw"email of user is not correct";let o=k({sub:r._id,id_google:r.id_google});return t.status(201).send({person:r,token:o})}catch(r){return t.status(500).json({error:r})}},T=async(e,t)=>{let{user_id:n,wage:r}=e.body;try{if(console.log(r,"wage"),console.log(n,"user_id "),!r)return t.status(500).json({error:"wage required"});if(!n)return t.status(500).json({error:"user required"});let o=await f.findOneAndUpdate({_id:n},{wage:r}),a=await f.findOne({_id:n});return t.status(201).send({people:a})}catch{return t.status(500).json({error:"err"})}};var W=h(require("jsonwebtoken"));var Se=async(e,t)=>{let n=String(e?.headers?.token||"");if(n)W.default.verify(n,"admin",async(r,o)=>{if(r)return t.status(403).json({message:r.message,error:r});if(!await f.findOne({_id:o?.sub}))return t.status(403).json({messagem:"forBidden"});e.headers.user=o?.sub});else return t.status(401).json({messagem:"Unauthorized"})},l=Se;function H(e){e.get("/user/getall",L),e.post("/user/check",B),e.post("/user/register",A),e.post("/user/login",P),e.post("/user/save/wage",T),e.post("/token",l)}var v=require("mongoose"),qe=new v.Schema({description:String,value:Number,date:Date,paymentConditions:String,paidGain:{type:Boolean,required:!1},category:String,observation:String,qtdInstallments:Number,valueRecurrence:Number,id_user:String}),m=(0,v.model)("Gain",qe);var $=async(e,t)=>{let{id:n,data:r}=e.body;try{l(e,t);let o=await m.findByIdAndUpdate(n,r),a=await m.findById(n);return t.status(201).json(a)}catch(o){return t.status(500).json({error:o})}},z=async(e,t)=>{let{id:n}=e.body;try{l(e,t);let r=await m.findById(n);if(!r?._id)return t.status(500).json({error:"Ganho n\xE3o encontrado"});let o=await m.deleteOne({_id:n}),a=await m.find({id_user:r?.id_user});return t.status(201).json(a)}catch(r){return t.status(500).json({error:r})}},Y=async(e,t)=>{let{id_user:n}=e.body;try{l(e,t);let r=await m.find({id_user:n});return t.status(201).json(r)}catch(r){return t.status(500).json({error:r})}},J=async(e,t)=>{try{l(e,t);let{id:n}=e.body,r=await m.findOne({_id:n});return t.status(201).json(r)}catch(n){return t.status(500).json({error:n})}},K=async(e,t,n)=>{l(e,t);let{description:r,value:o,date:a,paymentConditions:i,paidGain:c,category:s,observation:u,id_user:d,valueRecurrence:y,qtdInstallments:g}=e.body;if(!r||!o||!a||!i||!d)return t.status(500).json({error:"H\xE1 obrigatorios campos n\xE3o preenchidos"});s||(s="no information"),u||(u=""),u||(u=""),c||(c=!1),y||(y=0),g||(g=0);try{return await m.create({description:r,value:o,date:a,paymentConditions:i,paidGain:c,id_user:d,valueRecurrence:y,qtdInstallments:g}),t.status(201).json({message:"Ganho criado com sucesso!"})}catch(b){return t.status(500).json({error:b})}};function Q(e){e.get("/gain/all",Y),e.post("/gain/get",J),e.put("/gain/update",$),e.delete("/gain/delete",z),e.post("/gain/create",K)}var I=require("mongoose"),Me=new I.Schema({description:String,value:Number,date:Date,paymentConditions:String,expensePayment:Boolean,category:String,local:String,qtdInstallments:Number,buyer:String,observation:String,id_goal:String,id_user:String,valueRecurrence:Number}),p=(0,I.model)("Expense",Me);var V=async(e,t)=>{let{id:n,data:r}=e.body;try{l(e,t);let o=await p.findByIdAndUpdate(n,r),a=await p.findById(n);return t.status(201).json(a)}catch(o){return t.status(500).json({error:o})}},X=async(e,t)=>{let{id:n}=e.body;try{l(e,t);let r=await p.findById(n);if(!r?._id)return t.status(500).json({error:"Gasto n\xE3o encontrado"});let o=await p.deleteOne({_id:n}),a=await p.find({id_user:r?.id_user});return t.status(201).json(a)}catch(r){return t.status(500).json({error:r})}},Z=async(e,t)=>{let{id_user:n}=e.body;try{l(e,t);let r=await p.find({id_user:n});return t.status(201).json(r)}catch(r){return t.status(500).json({error:r})}},ee=async(e,t)=>{try{l(e,t);let{id:n}=e.body,r=await p.findOne({_id:n});return t.status(201).json(r)}catch(n){return t.status(500).json({error:n})}},te=async(e,t,n)=>{l(e,t);let{description:r,value:o,date:a,paymentConditions:i,expensePayment:c,category:s,local:u,qtdInstallments:d,buyer:y,observation:g,id_goal:b,id_user:F,valueRecurrence:E}=e.body;if(!r||!o||!a||!i||!F||c===void 0)return t.status(500).json({error:"H\xE1 obrigatorios campos n\xE3o preenchidos"});E||(E=0),s||(s="no information"),g||(g=""),u||(g=""),b||(b=""),y||(y=""),d||(d=0);try{return await p.create({description:r,value:o,date:a,paymentConditions:i,expensePayment:c,category:s,local:u,qtdInstallments:d,buyer:y,observation:g,id_goal:b,id_user:F,valueRecurrence:E}),t.status(201).json({message:"Gasto cadastrado com sucesso!"})}catch(xe){return t.status(500).json({error:xe})}};function re(e){e.post("/expense/all",Z),e.get("/expense/get",ee),e.put("/expense/update",V),e.delete("/expense/delete",X),e.post("/expense/create",te)}var ne=async(e,t)=>{let{id_user:n,date:r}=e.body;try{l(e,t),console.log(n,"id_userid_user");let o=[];r||(r=new Date);let a=new Date(r);if(!n)return t.status(500).json({error:"user required"});let i=await m.find({id_user:n}),c=await p.find({id_user:n});return i.forEach((s,u)=>{if(s.paymentConditions==="Despesa recorrente"){o.push(s);return}if(new Date(s.date).getMonth()==a.getMonth()){o.push(s);return}if(s.paymentConditions==="Parcelado"&&s.qtdInstallments){let d=new Date(s.date);if(d.setMonth(d.getMonth()+s.qtdInstallments),new Date(s.date).getMonth()<=a.getMonth()&&d.getMonth()>=a.getMonth()){o.push(s);return}}}),c.forEach(s=>{if(s.paymentConditions==="Despesa recorrente"){o.push(s);return}if(new Date(s.date).getMonth()==a.getMonth()){o.push(s);return}if(s.paymentConditions==="Parcelado"&&s.qtdInstallments){let u=new Date(s.date);if(u.setMonth(u.getMonth()+s.qtdInstallments),new Date(s.date).getMonth()<=a.getMonth()&&u.getMonth()>=a.getMonth()){o.push(s);return}}}),t.status(201).json(o.sort((s,u)=>new Date(s.date).getMilliseconds()-new Date(u.date).getMilliseconds()))}catch(o){return t.status(500).json({error:o})}};function oe(e){e.post("/generalList/all",ne)}var D=require("mongoose"),Ee=new D.Schema({title:String,value:String,id_user:String,color:String,icon:String}),S=(0,D.model)("Categories",Ee);var se=async(e,t)=>{let{title:n,color:r,icon:o,id_user:a}=e.body;try{if(!a)return t.status(500).json({error:"id user required"});if(!n)return t.status(500).json({error:"title required"});r=r||"",o=o||"",await S.create({id_user:a,title:n,color:r,icon:o});let i=await S.find({id_user:a});return t.status(201).json(i)}catch{return t.status(500).json({error:"err"})}},ae=async(e,t)=>{let{id_user:n}=e.body;try{let r=await S.find({id_user:n});return t.status(201).json(r)}catch(r){return t.status(500).json({error:r})}};function ie(e){e.post("/category/all",ae),e.post("/category/create",se)}var q=require("mongoose"),Ne=new q.Schema({name:String,valueFinal:Number,dateInitial:Date,dateFinal:Date,valueRaised:Number,valueInitial:Number,complete:Boolean,id_user:String}),_=(0,q.model)("goal",Ne);var ue=async(e,t)=>{let{name:n,valueFinal:r,dateFinal:o,valueRaised:a,valueInitial:i,id_user:c}=e.body;try{if(Object.values([n,r,o,a,i,c]).some(g=>!g))return t.status(500).json({error:"there are empty fields"});let u=new Date,d=!1;await _.create({name:n,valueFinal:r,dateFinal:o,valueRaised:a,valueInitial:i,id_user:c,dateInitial:u,complete:d});let y=await _.find({id_user:c});return t.status(201).json(y)}catch{return t.status(500).json({error:"err"})}},ce=async(e,t)=>{let n=e.params.id;try{let r=await _.findById(n);return t.status(201).json(r)}catch(r){return t.status(500).json({error:r})}},le=async(e,t)=>{let{id_user:n}=e.body;try{let r=await _.aggregate([{$match:{id_user:n}},{$lookup:{from:"goalrecurrences",localField:"_id",foreignField:"id_goal",as:"recurrence"}}]).exec();return t.status(201).json(r)}catch(r){return t.status(500).json({error:r})}};function de(e){e.post("/goal/all",le),e.post("/goal/create",ue),e.get("/goal/:id",ce)}var w=h(require("mongoose")),Ce=new w.Schema({value:Number,date:Date,id_user:String,id_goal:{type:w.default.Schema.Types.ObjectId,required:!0,ref:"goal"}}),M=(0,w.model)("goalrecurrence",Ce);var me=async(e,t)=>{let{value:n,date:r,id_goal:o,id_user:a}=e.body;try{if(Object.values([n,r,o,a]).some(s=>!s))return t.status(500).json({error:"there are empty fields"});await M.create({value:n,date:r,id_goal:o,id_user:a});let c=await M.find({id_goal:o});return t.status(201).json(c)}catch{return t.status(500).json({error:"err"})}},pe=async(e,t)=>{let{id_goal:n}=e.body;try{let r=await M.find({id_goal:n});return t.status(201).json(r)}catch(r){return t.status(500).json({error:r})}};function ge(e){e.post("/goal/recurrence/all",pe),e.post("/goal/recurrence/create",me)}var R=(0,fe.Router)();function ye(){return H(R),Q(R),re(R),oe(R),ie(R),de(R),ge(R),R}var x=(0,N.default)();x.use((0,he.default)());x.use(N.default.json());x.use(C.default.urlencoded({extended:!0}));x.use(C.default.json());x.use(ye());Re.default.connect("mongodb+srv://admin:12345@moon.p6ongcq.mongodb.net/?retryWrites=true&w=majority").then(()=>{console.log("mongoDB conection is working"),x.listen(9002)}).catch(e=>console.log(e,"deu erro :( (miado)"));0&&(module.exports={app});
