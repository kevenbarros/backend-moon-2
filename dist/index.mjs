import ne from"express";import qe from"mongoose";import Me from"cors";import oe from"body-parser";import{Router as Se}from"express";import{model as ae,Schema as ie}from"mongoose";var ue=new ie({email:String,picture:String,name:String,id_google:String,creationDate:Date,updateDate:Date,locale:String,given_name:String,family_name:String,wage:Number}),f=ae("Users",ue);import ce from"jsonwebtoken";function v(t){return ce.sign(t,"admin",{expiresIn:"1d"})}var I=async(t,e)=>{try{let{id_google:n}=t.body;if(!await f.findOne({id_google:n}))return e.status(201).json({checkUser:!1});e.status(201).json({checkUser:!0})}catch{}},D=async(t,e,n)=>{try{let r=await f.find();return e.status(200).json(r)}catch(r){return e.status(500).json({error:r})}},S=async(t,e,n)=>{let{email:r,picture:o,name:a,id_google:i,locale:c,given_name:s,family_name:u}=t.body;try{if(await f.findOne({id_google:i}))throw"user already exists";return await f.create({email:r,picture:o,name:a,id_google:i,locale:c,given_name:s,family_name:u,creationDate:new Date,updateDate:new Date,wage:0}),e.status(201).json({message:"Person added!"})}catch(d){return e.status(500).json({error:d})}},q=async(t,e)=>{let{id_google:n}=t.body;try{let r=await f.findOne({id_google:n});if(!r)throw"email of user is not correct";let o=v({sub:r._id,id_google:r.id_google});return e.status(201).send({person:r,token:o})}catch(r){return e.status(500).json({error:r})}},M=async(t,e)=>{let{user_id:n,wage:r}=t.body;try{if(console.log(r,"wage"),console.log(n,"user_id "),!r)return e.status(500).json({error:"wage required"});if(!n)return e.status(500).json({error:"user required"});let o=await f.findOneAndUpdate({_id:n},{wage:r}),a=await f.findOne({_id:n});return e.status(201).send({people:a})}catch{return e.status(500).json({error:"err"})}};import le from"jsonwebtoken";var de=async(t,e)=>{let n=String(t?.headers?.token||"");if(n)le.verify(n,"admin",async(r,o)=>{if(r)return e.status(403).json({message:r.message,error:r});if(!await f.findOne({_id:o?.sub}))return e.status(403).json({messagem:"forBidden"});t.headers.user=o?.sub});else return e.status(401).json({messagem:"Unauthorized"})},l=de;function E(t){t.get("/user/getall",D),t.post("/user/check",I),t.post("/user/register",S),t.post("/user/login",q),t.post("/user/save/wage",M),t.post("/token",l)}import{model as me,Schema as pe}from"mongoose";var ge=new pe({description:String,value:Number,date:Date,paymentConditions:String,paidGain:{type:Boolean,required:!1},category:String,observation:String,qtdInstallments:Number,valueRecurrence:Number,id_user:String}),m=me("Gain",ge);var N=async(t,e)=>{let{id:n,data:r}=t.body;try{l(t,e);let o=await m.findByIdAndUpdate(n,r),a=await m.findById(n);return e.status(201).json(a)}catch(o){return e.status(500).json({error:o})}},C=async(t,e)=>{let{id:n}=t.body;try{l(t,e);let r=await m.findById(n);if(!r?._id)return e.status(500).json({error:"Ganho n\xE3o encontrado"});let o=await m.deleteOne({_id:n}),a=await m.find({id_user:r?.id_user});return e.status(201).json(a)}catch(r){return e.status(500).json({error:r})}},F=async(t,e)=>{let{id_user:n}=t.body;try{l(t,e);let r=await m.find({id_user:n});return e.status(201).json(r)}catch(r){return e.status(500).json({error:r})}},U=async(t,e)=>{try{l(t,e);let{id:n}=t.body,r=await m.findOne({_id:n});return e.status(201).json(r)}catch(n){return e.status(500).json({error:n})}},O=async(t,e,n)=>{l(t,e);let{description:r,value:o,date:a,paymentConditions:i,paidGain:c,category:s,observation:u,id_user:d,valueRecurrence:y,qtdInstallments:g}=t.body;if(!r||!o||!a||!i||!d)return e.status(500).json({error:"H\xE1 obrigatorios campos n\xE3o preenchidos"});s||(s="no information"),u||(u=""),u||(u=""),c||(c=!1),y||(y=0),g||(g=0);try{return await m.create({description:r,value:o,date:a,paymentConditions:i,paidGain:c,id_user:d,valueRecurrence:y,qtdInstallments:g}),e.status(201).json({message:"Ganho criado com sucesso!"})}catch(x){return e.status(500).json({error:x})}};function k(t){t.get("/gain/all",F),t.post("/gain/get",U),t.put("/gain/update",N),t.delete("/gain/delete",C),t.post("/gain/create",O)}import{model as fe,Schema as ye}from"mongoose";var Re=new ye({description:String,value:Number,date:Date,paymentConditions:String,expensePayment:Boolean,category:String,local:String,qtdInstallments:Number,buyer:String,observation:String,id_goal:String,id_user:String,valueRecurrence:Number}),p=fe("Expense",Re);var B=async(t,e)=>{let{id:n,data:r}=t.body;try{l(t,e);let o=await p.findByIdAndUpdate(n,r),a=await p.findById(n);return e.status(201).json(a)}catch(o){return e.status(500).json({error:o})}},L=async(t,e)=>{let{id:n}=t.body;try{l(t,e);let r=await p.findById(n);if(!r?._id)return e.status(500).json({error:"Gasto n\xE3o encontrado"});let o=await p.deleteOne({_id:n}),a=await p.find({id_user:r?.id_user});return e.status(201).json(a)}catch(r){return e.status(500).json({error:r})}},A=async(t,e)=>{let{id_user:n}=t.body;try{l(t,e);let r=await p.find({id_user:n});return e.status(201).json(r)}catch(r){return e.status(500).json({error:r})}},P=async(t,e)=>{try{l(t,e);let{id:n}=t.body,r=await p.findOne({_id:n});return e.status(201).json(r)}catch(n){return e.status(500).json({error:n})}},T=async(t,e,n)=>{l(t,e);let{description:r,value:o,date:a,paymentConditions:i,expensePayment:c,category:s,local:u,qtdInstallments:d,buyer:y,observation:g,id_goal:x,id_user:G,valueRecurrence:j}=t.body;if(!r||!o||!a||!i||!G||c===void 0)return e.status(500).json({error:"H\xE1 obrigatorios campos n\xE3o preenchidos"});j||(j=0),s||(s="no information"),g||(g=""),u||(g=""),x||(x=""),y||(y=""),d||(d=0);try{return await p.create({description:r,value:o,date:a,paymentConditions:i,expensePayment:c,category:s,local:u,qtdInstallments:d,buyer:y,observation:g,id_goal:x,id_user:G,valueRecurrence:j}),e.status(201).json({message:"Gasto cadastrado com sucesso!"})}catch(se){return e.status(500).json({error:se})}};function W(t){t.post("/expense/all",A),t.get("/expense/get",P),t.put("/expense/update",B),t.delete("/expense/delete",L),t.post("/expense/create",T)}var H=async(t,e)=>{let{id_user:n,date:r}=t.body;try{l(t,e),console.log(n,"id_userid_user");let o=[];r||(r=new Date);let a=new Date(r);if(!n)return e.status(500).json({error:"user required"});let i=await m.find({id_user:n}),c=await p.find({id_user:n});return i.forEach((s,u)=>{if(s.paymentConditions==="Despesa recorrente"){o.push(s);return}if(new Date(s.date).getMonth()==a.getMonth()){o.push(s);return}if(s.paymentConditions==="Parcelado"&&s.qtdInstallments){let d=new Date(s.date);if(d.setMonth(d.getMonth()+s.qtdInstallments),new Date(s.date).getMonth()<=a.getMonth()&&d.getMonth()>=a.getMonth()){o.push(s);return}}}),c.forEach(s=>{if(s.paymentConditions==="Despesa recorrente"){o.push(s);return}if(new Date(s.date).getMonth()==a.getMonth()){o.push(s);return}if(s.paymentConditions==="Parcelado"&&s.qtdInstallments){let u=new Date(s.date);if(u.setMonth(u.getMonth()+s.qtdInstallments),new Date(s.date).getMonth()<=a.getMonth()&&u.getMonth()>=a.getMonth()){o.push(s);return}}}),e.status(201).json(o.sort((s,u)=>new Date(s.date).getMilliseconds()-new Date(u.date).getMilliseconds()))}catch(o){return e.status(500).json({error:o})}};function $(t){t.post("/generalList/all",H)}import{model as he,Schema as xe}from"mongoose";var we=new xe({title:String,value:String,id_user:String,color:String,icon:String}),b=he("Categories",we);var z=async(t,e)=>{let{title:n,color:r,icon:o,id_user:a}=t.body;try{if(!a)return e.status(500).json({error:"id user required"});if(!n)return e.status(500).json({error:"title required"});r=r||"",o=o||"",await b.create({id_user:a,title:n,color:r,icon:o});let i=await b.find({id_user:a});return e.status(201).json(i)}catch{return e.status(500).json({error:"err"})}},Y=async(t,e)=>{let{id_user:n}=t.body;try{let r=await b.find({id_user:n});return e.status(201).json(r)}catch(r){return e.status(500).json({error:r})}};function J(t){t.post("/category/all",Y),t.post("/category/create",z)}import{model as be,Schema as _e}from"mongoose";var je=new _e({name:String,valueFinal:Number,dateInitial:Date,dateFinal:Date,valueRaised:Number,valueInitial:Number,complete:Boolean,id_user:String}),w=be("goal",je);var K=async(t,e)=>{let{name:n,valueFinal:r,dateFinal:o,valueRaised:a,valueInitial:i,id_user:c}=t.body;try{if(Object.values([n,r,o,a,i,c]).some(g=>!g))return e.status(500).json({error:"there are empty fields"});let u=new Date,d=!1;await w.create({name:n,valueFinal:r,dateFinal:o,valueRaised:a,valueInitial:i,id_user:c,dateInitial:u,complete:d});let y=await w.find({id_user:c});return e.status(201).json(y)}catch{return e.status(500).json({error:"err"})}},Q=async(t,e)=>{let n=t.params.id;try{let r=await w.findById(n);return e.status(201).json(r)}catch(r){return e.status(500).json({error:r})}},V=async(t,e)=>{let{id_user:n}=t.body;try{let r=await w.aggregate([{$match:{id_user:n}},{$lookup:{from:"goalrecurrences",localField:"_id",foreignField:"id_goal",as:"recurrence"}}]).exec();return e.status(201).json(r)}catch(r){return e.status(500).json({error:r})}};function X(t){t.post("/goal/all",V),t.post("/goal/create",K),t.get("/goal/:id",Q)}import Ge,{model as ve,Schema as Ie}from"mongoose";var De=new Ie({value:Number,date:Date,id_user:String,id_goal:{type:Ge.Schema.Types.ObjectId,required:!0,ref:"goal"}}),_=ve("goalrecurrence",De);var Z=async(t,e)=>{let{value:n,date:r,id_goal:o,id_user:a}=t.body;try{if(Object.values([n,r,o,a]).some(s=>!s))return e.status(500).json({error:"there are empty fields"});await _.create({value:n,date:r,id_goal:o,id_user:a});let c=await _.find({id_goal:o});return e.status(201).json(c)}catch{return e.status(500).json({error:"err"})}},ee=async(t,e)=>{let{id_goal:n}=t.body;try{let r=await _.find({id_goal:n});return e.status(201).json(r)}catch(r){return e.status(500).json({error:r})}};function te(t){t.post("/goal/recurrence/all",ee),t.post("/goal/recurrence/create",Z)}var R=Se();function re(){return E(R),k(R),W(R),$(R),J(R),X(R),te(R),R}var h=ne();h.use(Me());h.use(ne.json());h.use(oe.urlencoded({extended:!0}));h.use(oe.json());h.use(re());qe.connect("mongodb+srv://admin:12345@moon.p6ongcq.mongodb.net/?retryWrites=true&w=majority").then(()=>{console.log("mongoDB conection is working"),h.listen(9002)}).catch(t=>console.log(t,"deu erro :( (miado)"));export{h as app};
