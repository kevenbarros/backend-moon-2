import T from"express";import oe from"mongoose";import ae from"cors";import z from"body-parser";import{Router as re}from"express";import{model as Y,Schema as J}from"mongoose";var K=new J({email:String,picture:String,name:String,id_google:String,creationDate:Date,updateDate:Date,locale:String,given_name:String,family_name:String,wage:Number}),f=Y("Users",K);import Q from"jsonwebtoken";function j(e){return Q.sign(e,"admin",{expiresIn:"1d"})}var _=async(e,t)=>{try{let{id_google:s}=e.body;if(!await f.findOne({id_google:s}))return t.status(201).json({checkUser:!1});t.status(201).json({checkUser:!0})}catch{}},G=async(e,t,s)=>{try{let n=await f.find();return t.status(200).json(n)}catch(n){return t.status(500).json({error:n})}},D=async(e,t,s)=>{let{email:n,picture:o,name:a,id_google:m,locale:l,given_name:r,family_name:i}=e.body;try{if(await f.findOne({id_google:m}))throw"user already exists";return await f.create({email:n,picture:o,name:a,id_google:m,locale:l,given_name:r,family_name:i,creationDate:new Date,updateDate:new Date,wage:0}),t.status(201).json({message:"Person added!"})}catch(d){return t.status(500).json({error:d})}},I=async(e,t)=>{let{id_google:s}=e.body;try{let n=await f.findOne({id_google:s});if(!n)throw"email of user is not correct";let o=j({sub:n._id,id_google:n.id_google});return t.status(201).send({person:n,token:o})}catch(n){return t.status(500).json({error:n})}};import V from"jsonwebtoken";var X=async(e,t)=>{let s=String(e?.headers?.token||"");if(s)V.verify(s,"admin",async(n,o)=>{if(n)return t.status(403).json({message:n.message,error:n});if(!await f.findOne({_id:o?.sub}))return t.status(403).json({messagem:"forBidden"});e.headers.user=o?.sub});else return t.status(401).json({messagem:"Unauthorized"})},u=X;function M(e){e.get("/user/getall",G),e.post("/user/check",_),e.post("/user/register",D),e.post("/user/login",I),e.post("/token",u)}import{model as Z,Schema as $}from"mongoose";var ee=new $({description:String,value:Number,date:Date,paymentConditions:String,paidGain:Boolean,category:String,observation:String,qtdInstallments:Number,valueRecurrence:Number,id_user:String}),c=Z("Gain",ee);var v=async(e,t)=>{let{id:s,data:n}=e.body;try{u(e,t);let o=await c.findByIdAndUpdate(s,n),a=await c.findById(s);return t.status(201).json(a)}catch(o){return t.status(500).json({error:o})}},S=async(e,t)=>{let{id:s}=e.body;try{u(e,t);let n=await c.findById(s);if(!n?._id)return t.status(500).json({error:"Ganho n\xE3o encontrado"});let o=await c.deleteOne({_id:s}),a=await c.find({id_user:n?.id_user});return t.status(201).json(a)}catch(n){return t.status(500).json({error:n})}},q=async(e,t)=>{let{id_user:s}=e.body;try{u(e,t);let n=await c.find({id_user:s});return t.status(201).json(n)}catch(n){return t.status(500).json({error:n})}},E=async(e,t)=>{try{u(e,t);let{id:s}=e.body,n=await c.findOne({_id:s});return t.status(201).json(n)}catch(s){return t.status(500).json({error:s})}},U=async(e,t,s)=>{u(e,t);let{description:n,value:o,date:a,paymentConditions:m,paidGain:l,category:r,observation:i,id_user:d,valueRecurrence:y,qtdInstallments:g}=e.body;if(!n||!o||!a||!m||!d)return t.status(500).json({error:"H\xE1 obrigatorios campos n\xE3o preenchidos"});r||(r="no information"),i||(i=""),i||(i=""),l||(l=!1),y||(y=0),g||(g=0);try{return await c.create({description:n,value:o,date:a,paymentConditions:m,paidGain:l,id_user:d,valueRecurrence:y,qtdInstallments:g}),t.status(201).json({message:"Ganho criado com sucesso!"})}catch(x){return t.status(500).json({error:x})}};function N(e){e.get("/gain/all",q),e.post("/gain/get",E),e.put("/gain/update",v),e.delete("/gain/delete",S),e.post("/gain/create",U)}import{model as te,Schema as ne}from"mongoose";var se=new ne({description:String,value:Number,date:Date,paymentConditions:String,expensePayment:Boolean,category:String,local:String,qtdInstallments:Number,buyer:String,observation:String,id_goal:String,id_user:String,valueRecurrence:Number}),p=te("Expense",se);var k=async(e,t)=>{let{id:s,data:n}=e.body;try{u(e,t);let o=await p.findByIdAndUpdate(s,n),a=await p.findById(s);return t.status(201).json(a)}catch(o){return t.status(500).json({error:o})}},C=async(e,t)=>{let{id:s}=e.body;try{u(e,t);let n=await p.findById(s);if(!n?._id)return t.status(500).json({error:"Gasto n\xE3o encontrado"});let o=await p.deleteOne({_id:s}),a=await p.find({id_user:n?.id_user});return t.status(201).json(a)}catch(n){return t.status(500).json({error:n})}},F=async(e,t)=>{let{id_user:s}=e.body;try{u(e,t);let n=await p.find({id_user:s});return t.status(201).json(n)}catch(n){return t.status(500).json({error:n})}},B=async(e,t)=>{try{u(e,t);let{id:s}=e.body,n=await p.findOne({_id:s});return t.status(201).json(n)}catch(s){return t.status(500).json({error:s})}},A=async(e,t,s)=>{u(e,t);let{description:n,value:o,date:a,paymentConditions:m,expensePayment:l,category:r,local:i,qtdInstallments:d,buyer:y,observation:g,id_goal:x,id_user:b,valueRecurrence:w}=e.body;if(!n||!o||!a||!m||!b||l===void 0)return t.status(500).json({error:"H\xE1 obrigatorios campos n\xE3o preenchidos"});w||(w=0),r||(r="no information"),g||(g=""),i||(g=""),x||(x=""),y||(y=""),d||(d=0);try{return await p.create({description:n,value:o,date:a,paymentConditions:m,expensePayment:l,category:r,local:i,qtdInstallments:d,buyer:y,observation:g,id_goal:x,id_user:b,valueRecurrence:w}),t.status(201).json({message:"Gasto cadastrado com sucesso!"})}catch(W){return t.status(500).json({error:W})}};function O(e){e.post("/expense/all",F),e.get("/expense/get",B),e.put("/expense/update",k),e.delete("/expense/delete",C),e.post("/expense/create",A)}var P=async(e,t)=>{let{id_user:s,date:n}=e.body;try{u(e,t),console.log(s,"id_userid_user");let o=[];n||(n=new Date);let a=new Date(n);if(!s)return t.status(500).json({error:"user required"});let m=await c.find({id_user:s}),l=await p.find({id_user:s});return m.forEach((r,i)=>{if(r.paymentConditions==="Despesa recorrente"){o.push(r);return}if(new Date(r.date).getMonth()==a.getMonth()){o.push(r);return}if(r.paymentConditions==="Parcelado"&&r.qtdInstallments){let d=new Date(r.date);if(d.setMonth(d.getMonth()+r.qtdInstallments),new Date(r.date).getMonth()<=a.getMonth()&&d.getMonth()>=a.getMonth()){o.push(r);return}}}),l.forEach(r=>{if(r.paymentConditions==="Despesa recorrente"){o.push(r);return}if(new Date(r.date).getMonth()==a.getMonth()){o.push(r);return}if(r.paymentConditions==="Parcelado"&&r.qtdInstallments){let i=new Date(r.date);if(i.setMonth(i.getMonth()+r.qtdInstallments),new Date(r.date).getMonth()<=a.getMonth()&&i.getMonth()>=a.getMonth()){o.push(r);return}}}),t.status(201).json(o.sort((r,i)=>new Date(r.date).getMilliseconds()-new Date(i.date).getMilliseconds()))}catch(o){return t.status(500).json({error:o})}};function L(e){e.post("/generalList/all",P)}var R=re();function H(){return M(R),N(R),O(R),L(R),R}var h=T();h.use(ae());h.use(T.json());h.use(z.urlencoded({extended:!0}));h.use(z.json());h.use(H());oe.connect("mongodb+srv://admin:12345@moon.p6ongcq.mongodb.net/?retryWrites=true&w=majority").then(()=>{console.log("mongoDB conection is working"),h.listen(9002)}).catch(e=>console.log(e,"deu erro :( (miado)"));export{h as app};
